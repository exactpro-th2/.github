name: Compound Java build and Docker/Sonatype publish


on:
  workflow_call:
    inputs:
      docker-username:
        required: false
        type: string
      build-target:
        required: true
        type: string
        description: 'Use values Docker or Sonatype'
      runsOn:
        required: false
        type: string
        default: 'ubuntu-20.04'
# Trivy block
      trivy-enabled:
        required: false
        type: boolean
        default: true
        description: 'Whether scanning for vulnerabilities is enabled'
      trivy-target:
        required: false
        type: string
        default: 'os,library'
        description: 'What Trivy will scan: image, library or both'
      trivy-sensitivity:
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'
        description: 'Adjusting the Scanner Sensitivity'


    outputs:
      version:
        description: "Generated version of the image"
        value: ${{ jobs.build.outputs.version }}
    secrets:
      docker-password:
        required: false

jobs:
  build:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.release_ver.outputs.value }}
    steps:
      - uses: actions/checkout@v3
      - name: Get branch name
        id: branch
        run: echo ::set-output name=branch_name::${GITHUB_REF#refs/*/}
      - name: Get SHA of the commit
        id: sha
        run: echo ::set-output name=sha_short::$(git rev-parse --short HEAD)
      - name: Get release_version
        id: ver
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: gradle.properties
          properties: release_version
      - name: Build custom release version
        id: release_ver
        run: echo ::set-output name=value::"${{ steps.ver.outputs.value }}-${{ steps.branch.outputs.branch_name }}-${{ github.run_id }}-${{ steps.sha.outputs.sha_short }}"
      - name: Show custom release version
        run: echo ${{ steps.release_ver.outputs.value }}

#        if Docker
      - name: Set up Docker Buildx
        if: contains(${{inputs.build-target}}, 'Docker')
        uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        if: contains(${{inputs.build-target}}, 'Docker')
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_OUTPUT
        if: contains(${{inputs.build-target}}, 'Docker')
        id: meta
      - name: Build and push
        if: contains(${{inputs.build-target}}, 'Docker')
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.read_property.outputs.release_version }}
          labels: com.exactpro.th2.${{ steps.meta.outputs.REPOSITORY_NAME }}=${{ steps.read_property.outputs.release_version }}


#        if Sonatype
      - name: Set up JDK 11
        if: contains(${{inputs.build-target}}, 'Sonatype')
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build with Gradle
        if: contains(${{inputs.build-target}}, 'Sonatype')
        run: ./gradlew --info clean build publish
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SONATYPE_GPG_ARMORED_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SONATYPE_SIGNING_PASSWORD }}
